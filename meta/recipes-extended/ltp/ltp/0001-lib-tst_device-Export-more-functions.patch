From aa5ba6f518360979bcf8181d66bfc64fcfc2b7ee Mon Sep 17 00:00:00 2001
From: Cyril Hrubis <chrubis@suse.cz>
Date: Fri, 16 Aug 2019 14:24:20 +0200
Subject: [PATCH 1/3] lib/tst_device: Export more functions.

Export tst_attach_device() and tst_deteach_device() which will be later
on used by a kernel netlink uevent tests.

Signed-off-by: Cyril Hrubis <chrubis@suse.cz>
Reviewed-by: Clemens Famulla-Conrad <cfamullaconrad@suse.de>

Upstream-Status: Backport

Reference to upstream patch:
https://github.com/linux-test-project/ltp/commit/2c56551ca69ca6fa04c036ff6721820b4c2ed0e9

Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
---
 include/tst_device.h | 19 ++++++++++++++++++-
 lib/tst_device.c     |  8 ++++----
 2 files changed, 22 insertions(+), 5 deletions(-)

diff --git a/include/tst_device.h b/include/tst_device.h
index 61902b7e0..38013faa5 100644
--- a/include/tst_device.h
+++ b/include/tst_device.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2016 Cyril Hrubis <chrubis@suse.cz>
+ * Copyright (c) 2016-2019 Cyril Hrubis <chrubis@suse.cz>
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -44,6 +44,23 @@ int tst_umount(const char *path);
  */
 int tst_clear_device(const char *dev);
 
+/*
+ * Attaches a file to a loop device.
+ *
+ * @dev_path Path to the loop device e.g. /dev/loop0
+ * @file_path Path to a file e.g. disk.img
+ * @return Zero on success, non-zero otherwise.
+ */
+int tst_attach_device(const char *dev_path, const char *file_path);
+
+/*
+ * Detaches a file from a loop device.
+ *
+ * @dev_path Path to the loop device e.g. /dev/loop0
+ * @return Zero on succes, non-zero otherwise.
+ */
+int tst_detach_device(const char *dev_path);
+
 /*
  * Reads test block device stat file and returns the bytes written since the
  * last call of this function.
diff --git a/lib/tst_device.c b/lib/tst_device.c
index 65fcc1337..15b0031c5 100644
--- a/lib/tst_device.c
+++ b/lib/tst_device.c
@@ -132,7 +132,7 @@ static int find_free_loopdev(void)
 	return 1;
 }
 
-static int attach_device(const char *dev, const char *file)
+int tst_attach_device(const char *dev, const char *file)
 {
 	int dev_fd, file_fd;
 	struct loop_info loopinfo;
@@ -178,7 +178,7 @@ static int attach_device(const char *dev, const char *file)
 	return 0;
 }
 
-static int detach_device(const char *dev)
+int tst_detach_device(const char *dev)
 {
 	int dev_fd, ret, i;
 
@@ -277,7 +277,7 @@ const char *tst_acquire_device__(unsigned int size)
 	if (find_free_loopdev())
 		return NULL;
 
-	if (attach_device(dev_path, DEV_FILE))
+	if (tst_attach_device(dev_path, DEV_FILE))
 		return NULL;
 
 	device_acquired = 1;
@@ -322,7 +322,7 @@ int tst_release_device(const char *dev)
 	 *
 	 * The file image is deleted in tst_rmdir();
 	 */
-	ret = detach_device(dev);
+	ret = tst_detach_device(dev);
 
 	device_acquired = 0;
 
-- 
2.25.1

