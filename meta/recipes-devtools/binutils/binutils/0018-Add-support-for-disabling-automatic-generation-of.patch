From 5d628283ac78618435502b5af62a0b3df2193fc3 Mon Sep 17 00:00:00 2001
From: Jiping Ma <jiping.ma2@windriver.com>
Date: Thu, 10 Jan 2019 02:40:25 +0000
Subject: [PATCH] Add support for disabling automatic generation of
 .eh_frame_hdr sections in ELF based linkers.

PR ld/20537
* emultempl/elf32.em: More OPTION_xxx values into an enum.  Add
OPTION_NO_EH_FRAME_HDR.
(_add_options): Add support for --no-eh-frame-hdr.
* ld.texinfo: Document new option.
* lexsup.c (elf_shlib_list_options): List new option.
* NEWS: Mention the new option.

Backporting the patch from binutils mainline
https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;h=29063f8bfb9d68a213efd1d0ab7a66f97ed9a013

Upstream-Status: Backport
Signed-off-by: Jiping Ma <jiping.ma2@windriver.com>
---
 ld/emultempl/elf32.em | 27 ++++++++++++++++++---------
 ld/ld.texinfo         |  7 +++++--
 ld/lexsup.c           |  2 ++
 3 files changed, 25 insertions(+), 11 deletions(-)

diff --git a/ld/emultempl/elf32.em b/ld/emultempl/elf32.em
index f4c640e2d7..3ac3f8afa8 100644
--- a/ld/emultempl/elf32.em
+++ b/ld/emultempl/elf32.em
@@ -2189,15 +2189,19 @@ fi
 
 fragment <<EOF
 
-#define OPTION_DISABLE_NEW_DTAGS	(400)
-#define OPTION_ENABLE_NEW_DTAGS		(OPTION_DISABLE_NEW_DTAGS + 1)
-#define OPTION_GROUP			(OPTION_ENABLE_NEW_DTAGS + 1)
-#define OPTION_EH_FRAME_HDR		(OPTION_GROUP + 1)
-#define OPTION_EXCLUDE_LIBS		(OPTION_EH_FRAME_HDR + 1)
-#define OPTION_HASH_STYLE		(OPTION_EXCLUDE_LIBS + 1)
-#define OPTION_BUILD_ID			(OPTION_HASH_STYLE + 1)
-#define OPTION_AUDIT			(OPTION_BUILD_ID + 1)
-#define OPTION_COMPRESS_DEBUG		(OPTION_AUDIT + 1)
+enum elf_options
+{
+  OPTION_DISABLE_NEW_DTAGS = 400,
+  OPTION_ENABLE_NEW_DTAGS,
+  OPTION_GROUP,
+  OPTION_EH_FRAME_HDR,
+  OPTION_NO_EH_FRAME_HDR,
+  OPTION_EXCLUDE_LIBS,
+  OPTION_HASH_STYLE,
+  OPTION_BUILD_ID,
+  OPTION_AUDIT,
+  OPTION_COMPRESS_DEBUG
+};
 
 static void
 gld${EMULATION_NAME}_add_options
@@ -2233,6 +2237,7 @@ fragment <<EOF
     {"disable-new-dtags", no_argument, NULL, OPTION_DISABLE_NEW_DTAGS},
     {"enable-new-dtags", no_argument, NULL, OPTION_ENABLE_NEW_DTAGS},
     {"eh-frame-hdr", no_argument, NULL, OPTION_EH_FRAME_HDR},
+    {"no-eh-frame-hdr", no_argument, NULL, OPTION_NO_EH_FRAME_HDR},
     {"exclude-libs", required_argument, NULL, OPTION_EXCLUDE_LIBS},
     {"hash-style", required_argument, NULL, OPTION_HASH_STYLE},
 EOF
@@ -2312,6 +2317,10 @@ fragment <<EOF
       link_info.eh_frame_hdr_type = DWARF2_EH_HDR;
       break;
 
+    case OPTION_NO_EH_FRAME_HDR:
+      link_info.eh_frame_hdr_type = 0;
+      break;
+
     case OPTION_GROUP:
       link_info.flags_1 |= (bfd_vma) DF_1_GROUP;
       /* Groups must be self-contained.  */
diff --git a/ld/ld.texinfo b/ld/ld.texinfo
index 838c75deb5..12daed3d7c 100644
--- a/ld/ld.texinfo
+++ b/ld/ld.texinfo
@@ -2260,9 +2260,12 @@ file as @code{__wrap_malloc}; if you do, the assembler may resolve the
 call before the linker has a chance to wrap it to @code{malloc}.
 
 @kindex --eh-frame-hdr
+@kindex --no-eh-frame-hdr
 @item --eh-frame-hdr
-Request creation of @code{.eh_frame_hdr} section and ELF
-@code{PT_GNU_EH_FRAME} segment header.
+@itemx --no-eh-frame-hdr
+Request (@option{--eh-frame-hdr}) or suppress
+(@option{--no-eh-frame-hdr}) the creation of @code{.eh_frame_hdr}
+section and ELF @code{PT_GNU_EH_FRAME} segment header.
 
 @kindex --ld-generated-unwind-info
 @item --no-ld-generated-unwind-info
diff --git a/ld/lexsup.c b/ld/lexsup.c
index 5c9da572dd..fe9c018bdc 100644
--- a/ld/lexsup.c
+++ b/ld/lexsup.c
@@ -1735,6 +1735,8 @@ elf_shlib_list_options (FILE *file)
   fprintf (file, _("\
   --eh-frame-hdr              Create .eh_frame_hdr section\n"));
   fprintf (file, _("\
+  --no-eh-frame-hdr           Do not create .eh_frame_hdr section\n"));
+  fprintf (file, _("\
   --exclude-libs=LIBS         Make all symbols in LIBS hidden\n"));
   fprintf (file, _("\
   --hash-style=STYLE          Set hash style to sysv, gnu or both\n"));
-- 
2.11.0

